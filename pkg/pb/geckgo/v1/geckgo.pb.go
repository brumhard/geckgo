// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.17.1
// source: geckgo/v1/geckgo.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Moment_Type int32

const (
	Moment_TYPE_UNSPECIFIED Moment_Type = 0
	Moment_TYPE_START       Moment_Type = 1
	Moment_TYPE_START_BREAK Moment_Type = 2
	Moment_TYPE_END_BREAK   Moment_Type = 3
	Moment_TYPE_END         Moment_Type = 4
)

// Enum value maps for Moment_Type.
var (
	Moment_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_START",
		2: "TYPE_START_BREAK",
		3: "TYPE_END_BREAK",
		4: "TYPE_END",
	}
	Moment_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_START":       1,
		"TYPE_START_BREAK": 2,
		"TYPE_END_BREAK":   3,
		"TYPE_END":         4,
	}
)

func (x Moment_Type) Enum() *Moment_Type {
	p := new(Moment_Type)
	*p = x
	return p
}

func (x Moment_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Moment_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_geckgo_v1_geckgo_proto_enumTypes[0].Descriptor()
}

func (Moment_Type) Type() protoreflect.EnumType {
	return &file_geckgo_v1_geckgo_proto_enumTypes[0]
}

func (x Moment_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Moment_Type.Descriptor instead.
func (Moment_Type) EnumDescriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{30, 0}
}

type AddListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Settings *ListSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *AddListRequest) Reset() {
	*x = AddListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddListRequest) ProtoMessage() {}

func (x *AddListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddListRequest.ProtoReflect.Descriptor instead.
func (*AddListRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{0}
}

func (x *AddListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddListRequest) GetSettings() *ListSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type AddListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List *List `protobuf:"bytes,1,opt,name=list,proto3" json:"list,omitempty"`
}

func (x *AddListResponse) Reset() {
	*x = AddListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddListResponse) ProtoMessage() {}

func (x *AddListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddListResponse.ProtoReflect.Descriptor instead.
func (*AddListResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{1}
}

func (x *AddListResponse) GetList() *List {
	if x != nil {
		return x.List
	}
	return nil
}

type GetListsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetListsRequest) Reset() {
	*x = GetListsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListsRequest) ProtoMessage() {}

func (x *GetListsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListsRequest.ProtoReflect.Descriptor instead.
func (*GetListsRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{2}
}

type GetListsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lists []*List `protobuf:"bytes,1,rep,name=lists,proto3" json:"lists,omitempty"`
}

func (x *GetListsResponse) Reset() {
	*x = GetListsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListsResponse) ProtoMessage() {}

func (x *GetListsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListsResponse.ProtoReflect.Descriptor instead.
func (*GetListsResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{3}
}

func (x *GetListsResponse) GetLists() []*List {
	if x != nil {
		return x.Lists
	}
	return nil
}

type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId int32 `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{4}
}

func (x *GetListRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

type GetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List *List `protobuf:"bytes,1,opt,name=list,proto3" json:"list,omitempty"`
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{5}
}

func (x *GetListResponse) GetList() *List {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: use fieldmask here?
	List *List `protobuf:"bytes,1,opt,name=list,proto3" json:"list,omitempty"`
}

func (x *UpdateListRequest) Reset() {
	*x = UpdateListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListRequest) ProtoMessage() {}

func (x *UpdateListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListRequest.ProtoReflect.Descriptor instead.
func (*UpdateListRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateListRequest) GetList() *List {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List *List `protobuf:"bytes,1,opt,name=list,proto3" json:"list,omitempty"`
}

func (x *UpdateListResponse) Reset() {
	*x = UpdateListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListResponse) ProtoMessage() {}

func (x *UpdateListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListResponse.ProtoReflect.Descriptor instead.
func (*UpdateListResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateListResponse) GetList() *List {
	if x != nil {
		return x.List
	}
	return nil
}

type DeleteListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId int32 `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
}

func (x *DeleteListRequest) Reset() {
	*x = DeleteListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteListRequest) ProtoMessage() {}

func (x *DeleteListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteListRequest.ProtoReflect.Descriptor instead.
func (*DeleteListRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteListRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

type DeleteListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteListResponse) Reset() {
	*x = DeleteListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteListResponse) ProtoMessage() {}

func (x *DeleteListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteListResponse.ProtoReflect.Descriptor instead.
func (*DeleteListResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{9}
}

type AddDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId  int32                  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	Date    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Moments []*Moment              `protobuf:"bytes,3,rep,name=moments,proto3" json:"moments,omitempty"`
}

func (x *AddDayRequest) Reset() {
	*x = AddDayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDayRequest) ProtoMessage() {}

func (x *AddDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDayRequest.ProtoReflect.Descriptor instead.
func (*AddDayRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{10}
}

func (x *AddDayRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *AddDayRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *AddDayRequest) GetMoments() []*Moment {
	if x != nil {
		return x.Moments
	}
	return nil
}

type AddDayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day *Day `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *AddDayResponse) Reset() {
	*x = AddDayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDayResponse) ProtoMessage() {}

func (x *AddDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDayResponse.ProtoReflect.Descriptor instead.
func (*AddDayResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{11}
}

func (x *AddDayResponse) GetDay() *Day {
	if x != nil {
		return x.Day
	}
	return nil
}

type GetDaysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId int32 `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
}

func (x *GetDaysRequest) Reset() {
	*x = GetDaysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDaysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDaysRequest) ProtoMessage() {}

func (x *GetDaysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDaysRequest.ProtoReflect.Descriptor instead.
func (*GetDaysRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{12}
}

func (x *GetDaysRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

type GetDaysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days []*Day `protobuf:"bytes,1,rep,name=days,proto3" json:"days,omitempty"`
}

func (x *GetDaysResponse) Reset() {
	*x = GetDaysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDaysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDaysResponse) ProtoMessage() {}

func (x *GetDaysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDaysResponse.ProtoReflect.Descriptor instead.
func (*GetDaysResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{13}
}

func (x *GetDaysResponse) GetDays() []*Day {
	if x != nil {
		return x.Days
	}
	return nil
}

type GetDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId int32                  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	Date   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetDayRequest) Reset() {
	*x = GetDayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDayRequest) ProtoMessage() {}

func (x *GetDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDayRequest.ProtoReflect.Descriptor instead.
func (*GetDayRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{14}
}

func (x *GetDayRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *GetDayRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type GetDayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day *Day `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *GetDayResponse) Reset() {
	*x = GetDayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDayResponse) ProtoMessage() {}

func (x *GetDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDayResponse.ProtoReflect.Descriptor instead.
func (*GetDayResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{15}
}

func (x *GetDayResponse) GetDay() *Day {
	if x != nil {
		return x.Day
	}
	return nil
}

type UpdateDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId  int32                  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	Date    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Moments []*Moment              `protobuf:"bytes,3,rep,name=moments,proto3" json:"moments,omitempty"`
}

func (x *UpdateDayRequest) Reset() {
	*x = UpdateDayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDayRequest) ProtoMessage() {}

func (x *UpdateDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDayRequest.ProtoReflect.Descriptor instead.
func (*UpdateDayRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateDayRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *UpdateDayRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *UpdateDayRequest) GetMoments() []*Moment {
	if x != nil {
		return x.Moments
	}
	return nil
}

type UpdateDayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day *Day `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *UpdateDayResponse) Reset() {
	*x = UpdateDayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDayResponse) ProtoMessage() {}

func (x *UpdateDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDayResponse.ProtoReflect.Descriptor instead.
func (*UpdateDayResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateDayResponse) GetDay() *Day {
	if x != nil {
		return x.Day
	}
	return nil
}

type DeleteDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId int32                  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	Date   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *DeleteDayRequest) Reset() {
	*x = DeleteDayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDayRequest) ProtoMessage() {}

func (x *DeleteDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDayRequest.ProtoReflect.Descriptor instead.
func (*DeleteDayRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteDayRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *DeleteDayRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type DeleteDayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDayResponse) Reset() {
	*x = DeleteDayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDayResponse) ProtoMessage() {}

func (x *DeleteDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDayResponse.ProtoReflect.Descriptor instead.
func (*DeleteDayResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{19}
}

type StartDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId int32                  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	Time   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *StartDayRequest) Reset() {
	*x = StartDayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDayRequest) ProtoMessage() {}

func (x *StartDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartDayRequest.ProtoReflect.Descriptor instead.
func (*StartDayRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{20}
}

func (x *StartDayRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *StartDayRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type StartDayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartDayResponse) Reset() {
	*x = StartDayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDayResponse) ProtoMessage() {}

func (x *StartDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartDayResponse.ProtoReflect.Descriptor instead.
func (*StartDayResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{21}
}

type StartBreakRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId int32                  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	Time   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *StartBreakRequest) Reset() {
	*x = StartBreakRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBreakRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBreakRequest) ProtoMessage() {}

func (x *StartBreakRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBreakRequest.ProtoReflect.Descriptor instead.
func (*StartBreakRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{22}
}

func (x *StartBreakRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *StartBreakRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type StartBreakResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartBreakResponse) Reset() {
	*x = StartBreakResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBreakResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBreakResponse) ProtoMessage() {}

func (x *StartBreakResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBreakResponse.ProtoReflect.Descriptor instead.
func (*StartBreakResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{23}
}

type EndBreakRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId int32                  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	Time   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *EndBreakRequest) Reset() {
	*x = EndBreakRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndBreakRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndBreakRequest) ProtoMessage() {}

func (x *EndBreakRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndBreakRequest.ProtoReflect.Descriptor instead.
func (*EndBreakRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{24}
}

func (x *EndBreakRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *EndBreakRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type EndBreakResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndBreakResponse) Reset() {
	*x = EndBreakResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndBreakResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndBreakResponse) ProtoMessage() {}

func (x *EndBreakResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndBreakResponse.ProtoReflect.Descriptor instead.
func (*EndBreakResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{25}
}

type EndDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId int32                  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	Time   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *EndDayRequest) Reset() {
	*x = EndDayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndDayRequest) ProtoMessage() {}

func (x *EndDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndDayRequest.ProtoReflect.Descriptor instead.
func (*EndDayRequest) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{26}
}

func (x *EndDayRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *EndDayRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type EndDayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndDayResponse) Reset() {
	*x = EndDayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndDayResponse) ProtoMessage() {}

func (x *EndDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndDayResponse.ProtoReflect.Descriptor instead.
func (*EndDayResponse) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{27}
}

type ListSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DailyTime *durationpb.Duration `protobuf:"bytes,1,opt,name=daily_time,json=dailyTime,proto3" json:"daily_time,omitempty"`
}

func (x *ListSettings) Reset() {
	*x = ListSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSettings) ProtoMessage() {}

func (x *ListSettings) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSettings.ProtoReflect.Descriptor instead.
func (*ListSettings) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{28}
}

func (x *ListSettings) GetDailyTime() *durationpb.Duration {
	if x != nil {
		return x.DailyTime
	}
	return nil
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Settings *ListSettings `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{29}
}

func (x *List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *List) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *List) GetSettings() *ListSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type Moment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Moment_Type            `protobuf:"varint,1,opt,name=type,proto3,enum=geckgo.v1.Moment_Type" json:"type,omitempty"`
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Moment) Reset() {
	*x = Moment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Moment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Moment) ProtoMessage() {}

func (x *Moment) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Moment.ProtoReflect.Descriptor instead.
func (*Moment) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{30}
}

func (x *Moment) GetType() Moment_Type {
	if x != nil {
		return x.Type
	}
	return Moment_TYPE_UNSPECIFIED
}

func (x *Moment) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type Day struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Moments []*Moment              `protobuf:"bytes,2,rep,name=moments,proto3" json:"moments,omitempty"`
}

func (x *Day) Reset() {
	*x = Day{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geckgo_v1_geckgo_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Day) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Day) ProtoMessage() {}

func (x *Day) ProtoReflect() protoreflect.Message {
	mi := &file_geckgo_v1_geckgo_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Day.ProtoReflect.Descriptor instead.
func (*Day) Descriptor() ([]byte, []int) {
	return file_geckgo_v1_geckgo_proto_rawDescGZIP(), []int{31}
}

func (x *Day) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Day) GetMoments() []*Moment {
	if x != nil {
		return x.Moments
	}
	return nil
}

var File_geckgo_v1_geckgo_proto protoreflect.FileDescriptor

var file_geckgo_v1_geckgo_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x63, 0x6b,
	0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x59, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x36, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65,
	0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x6c, 0x69, 0x73,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x39, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x32, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x44, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x79, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x79, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x58, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x32, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x79, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x79, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x5b, 0x0a, 0x10, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a, 0x0f,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x0a, 0x11,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5a, 0x0a, 0x0f, 0x45, 0x6e, 0x64, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x45, 0x6e, 0x64, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x58, 0x0a, 0x0d, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x6e,
	0x64, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x38, 0x0a, 0x0a,
	0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x06, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x64,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x52, 0x45, 0x41, 0x4b,
	0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x42,
	0x52, 0x45, 0x41, 0x4b, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45,
	0x4e, 0x44, 0x10, 0x04, 0x22, 0x62, 0x0a, 0x03, 0x44, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67,
	0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xee, 0x07, 0x0a, 0x0d, 0x47, 0x65, 0x63,
	0x6b, 0x67, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x67, 0x65, 0x63,
	0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x19, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x65,
	0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x44, 0x61, 0x79, 0x12, 0x18, 0x2e,
	0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x61, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x73, 0x12,
	0x19, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x65, 0x63,
	0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x79, 0x12, 0x18, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67,
	0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x79, 0x12, 0x1b, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x79,
	0x12, 0x1b, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x12, 0x1a, 0x2e, 0x67, 0x65, 0x63, 0x6b,
	0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x65,
	0x61, 0x6b, 0x12, 0x1c, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x45, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x1a, 0x2e,
	0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x42, 0x72, 0x65,
	0x61, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x65, 0x63, 0x6b,
	0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x06, 0x45, 0x6e, 0x64, 0x44,
	0x61, 0x79, 0x12, 0x18, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6e, 0x64, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67,
	0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x75, 0x6d, 0x68, 0x61, 0x72, 0x64,
	0x2f, 0x67, 0x65, 0x63, 0x6b, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_geckgo_v1_geckgo_proto_rawDescOnce sync.Once
	file_geckgo_v1_geckgo_proto_rawDescData = file_geckgo_v1_geckgo_proto_rawDesc
)

func file_geckgo_v1_geckgo_proto_rawDescGZIP() []byte {
	file_geckgo_v1_geckgo_proto_rawDescOnce.Do(func() {
		file_geckgo_v1_geckgo_proto_rawDescData = protoimpl.X.CompressGZIP(file_geckgo_v1_geckgo_proto_rawDescData)
	})
	return file_geckgo_v1_geckgo_proto_rawDescData
}

var file_geckgo_v1_geckgo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_geckgo_v1_geckgo_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_geckgo_v1_geckgo_proto_goTypes = []interface{}{
	(Moment_Type)(0),              // 0: geckgo.v1.Moment.Type
	(*AddListRequest)(nil),        // 1: geckgo.v1.AddListRequest
	(*AddListResponse)(nil),       // 2: geckgo.v1.AddListResponse
	(*GetListsRequest)(nil),       // 3: geckgo.v1.GetListsRequest
	(*GetListsResponse)(nil),      // 4: geckgo.v1.GetListsResponse
	(*GetListRequest)(nil),        // 5: geckgo.v1.GetListRequest
	(*GetListResponse)(nil),       // 6: geckgo.v1.GetListResponse
	(*UpdateListRequest)(nil),     // 7: geckgo.v1.UpdateListRequest
	(*UpdateListResponse)(nil),    // 8: geckgo.v1.UpdateListResponse
	(*DeleteListRequest)(nil),     // 9: geckgo.v1.DeleteListRequest
	(*DeleteListResponse)(nil),    // 10: geckgo.v1.DeleteListResponse
	(*AddDayRequest)(nil),         // 11: geckgo.v1.AddDayRequest
	(*AddDayResponse)(nil),        // 12: geckgo.v1.AddDayResponse
	(*GetDaysRequest)(nil),        // 13: geckgo.v1.GetDaysRequest
	(*GetDaysResponse)(nil),       // 14: geckgo.v1.GetDaysResponse
	(*GetDayRequest)(nil),         // 15: geckgo.v1.GetDayRequest
	(*GetDayResponse)(nil),        // 16: geckgo.v1.GetDayResponse
	(*UpdateDayRequest)(nil),      // 17: geckgo.v1.UpdateDayRequest
	(*UpdateDayResponse)(nil),     // 18: geckgo.v1.UpdateDayResponse
	(*DeleteDayRequest)(nil),      // 19: geckgo.v1.DeleteDayRequest
	(*DeleteDayResponse)(nil),     // 20: geckgo.v1.DeleteDayResponse
	(*StartDayRequest)(nil),       // 21: geckgo.v1.StartDayRequest
	(*StartDayResponse)(nil),      // 22: geckgo.v1.StartDayResponse
	(*StartBreakRequest)(nil),     // 23: geckgo.v1.StartBreakRequest
	(*StartBreakResponse)(nil),    // 24: geckgo.v1.StartBreakResponse
	(*EndBreakRequest)(nil),       // 25: geckgo.v1.EndBreakRequest
	(*EndBreakResponse)(nil),      // 26: geckgo.v1.EndBreakResponse
	(*EndDayRequest)(nil),         // 27: geckgo.v1.EndDayRequest
	(*EndDayResponse)(nil),        // 28: geckgo.v1.EndDayResponse
	(*ListSettings)(nil),          // 29: geckgo.v1.ListSettings
	(*List)(nil),                  // 30: geckgo.v1.List
	(*Moment)(nil),                // 31: geckgo.v1.Moment
	(*Day)(nil),                   // 32: geckgo.v1.Day
	(*timestamppb.Timestamp)(nil), // 33: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 34: google.protobuf.Duration
}
var file_geckgo_v1_geckgo_proto_depIdxs = []int32{
	29, // 0: geckgo.v1.AddListRequest.settings:type_name -> geckgo.v1.ListSettings
	30, // 1: geckgo.v1.AddListResponse.list:type_name -> geckgo.v1.List
	30, // 2: geckgo.v1.GetListsResponse.lists:type_name -> geckgo.v1.List
	30, // 3: geckgo.v1.GetListResponse.list:type_name -> geckgo.v1.List
	30, // 4: geckgo.v1.UpdateListRequest.list:type_name -> geckgo.v1.List
	30, // 5: geckgo.v1.UpdateListResponse.list:type_name -> geckgo.v1.List
	33, // 6: geckgo.v1.AddDayRequest.date:type_name -> google.protobuf.Timestamp
	31, // 7: geckgo.v1.AddDayRequest.moments:type_name -> geckgo.v1.Moment
	32, // 8: geckgo.v1.AddDayResponse.day:type_name -> geckgo.v1.Day
	32, // 9: geckgo.v1.GetDaysResponse.days:type_name -> geckgo.v1.Day
	33, // 10: geckgo.v1.GetDayRequest.date:type_name -> google.protobuf.Timestamp
	32, // 11: geckgo.v1.GetDayResponse.day:type_name -> geckgo.v1.Day
	33, // 12: geckgo.v1.UpdateDayRequest.date:type_name -> google.protobuf.Timestamp
	31, // 13: geckgo.v1.UpdateDayRequest.moments:type_name -> geckgo.v1.Moment
	32, // 14: geckgo.v1.UpdateDayResponse.day:type_name -> geckgo.v1.Day
	33, // 15: geckgo.v1.DeleteDayRequest.date:type_name -> google.protobuf.Timestamp
	33, // 16: geckgo.v1.StartDayRequest.time:type_name -> google.protobuf.Timestamp
	33, // 17: geckgo.v1.StartBreakRequest.time:type_name -> google.protobuf.Timestamp
	33, // 18: geckgo.v1.EndBreakRequest.time:type_name -> google.protobuf.Timestamp
	33, // 19: geckgo.v1.EndDayRequest.time:type_name -> google.protobuf.Timestamp
	34, // 20: geckgo.v1.ListSettings.daily_time:type_name -> google.protobuf.Duration
	29, // 21: geckgo.v1.List.settings:type_name -> geckgo.v1.ListSettings
	0,  // 22: geckgo.v1.Moment.type:type_name -> geckgo.v1.Moment.Type
	33, // 23: geckgo.v1.Moment.time:type_name -> google.protobuf.Timestamp
	33, // 24: geckgo.v1.Day.date:type_name -> google.protobuf.Timestamp
	31, // 25: geckgo.v1.Day.moments:type_name -> geckgo.v1.Moment
	1,  // 26: geckgo.v1.GeckgoService.AddList:input_type -> geckgo.v1.AddListRequest
	3,  // 27: geckgo.v1.GeckgoService.GetLists:input_type -> geckgo.v1.GetListsRequest
	5,  // 28: geckgo.v1.GeckgoService.GetList:input_type -> geckgo.v1.GetListRequest
	7,  // 29: geckgo.v1.GeckgoService.UpdateList:input_type -> geckgo.v1.UpdateListRequest
	9,  // 30: geckgo.v1.GeckgoService.DeleteList:input_type -> geckgo.v1.DeleteListRequest
	11, // 31: geckgo.v1.GeckgoService.AddDay:input_type -> geckgo.v1.AddDayRequest
	13, // 32: geckgo.v1.GeckgoService.GetDays:input_type -> geckgo.v1.GetDaysRequest
	15, // 33: geckgo.v1.GeckgoService.GetDay:input_type -> geckgo.v1.GetDayRequest
	17, // 34: geckgo.v1.GeckgoService.UpdateDay:input_type -> geckgo.v1.UpdateDayRequest
	19, // 35: geckgo.v1.GeckgoService.DeleteDay:input_type -> geckgo.v1.DeleteDayRequest
	21, // 36: geckgo.v1.GeckgoService.StartDay:input_type -> geckgo.v1.StartDayRequest
	23, // 37: geckgo.v1.GeckgoService.StartBreak:input_type -> geckgo.v1.StartBreakRequest
	25, // 38: geckgo.v1.GeckgoService.EndBreak:input_type -> geckgo.v1.EndBreakRequest
	27, // 39: geckgo.v1.GeckgoService.EndDay:input_type -> geckgo.v1.EndDayRequest
	2,  // 40: geckgo.v1.GeckgoService.AddList:output_type -> geckgo.v1.AddListResponse
	4,  // 41: geckgo.v1.GeckgoService.GetLists:output_type -> geckgo.v1.GetListsResponse
	6,  // 42: geckgo.v1.GeckgoService.GetList:output_type -> geckgo.v1.GetListResponse
	8,  // 43: geckgo.v1.GeckgoService.UpdateList:output_type -> geckgo.v1.UpdateListResponse
	10, // 44: geckgo.v1.GeckgoService.DeleteList:output_type -> geckgo.v1.DeleteListResponse
	12, // 45: geckgo.v1.GeckgoService.AddDay:output_type -> geckgo.v1.AddDayResponse
	14, // 46: geckgo.v1.GeckgoService.GetDays:output_type -> geckgo.v1.GetDaysResponse
	16, // 47: geckgo.v1.GeckgoService.GetDay:output_type -> geckgo.v1.GetDayResponse
	18, // 48: geckgo.v1.GeckgoService.UpdateDay:output_type -> geckgo.v1.UpdateDayResponse
	20, // 49: geckgo.v1.GeckgoService.DeleteDay:output_type -> geckgo.v1.DeleteDayResponse
	22, // 50: geckgo.v1.GeckgoService.StartDay:output_type -> geckgo.v1.StartDayResponse
	24, // 51: geckgo.v1.GeckgoService.StartBreak:output_type -> geckgo.v1.StartBreakResponse
	26, // 52: geckgo.v1.GeckgoService.EndBreak:output_type -> geckgo.v1.EndBreakResponse
	28, // 53: geckgo.v1.GeckgoService.EndDay:output_type -> geckgo.v1.EndDayResponse
	40, // [40:54] is the sub-list for method output_type
	26, // [26:40] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_geckgo_v1_geckgo_proto_init() }
func file_geckgo_v1_geckgo_proto_init() {
	if File_geckgo_v1_geckgo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_geckgo_v1_geckgo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDaysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDaysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartDayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartDayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBreakRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBreakResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndBreakRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndBreakResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndDayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndDayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Moment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geckgo_v1_geckgo_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Day); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_geckgo_v1_geckgo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_geckgo_v1_geckgo_proto_goTypes,
		DependencyIndexes: file_geckgo_v1_geckgo_proto_depIdxs,
		EnumInfos:         file_geckgo_v1_geckgo_proto_enumTypes,
		MessageInfos:      file_geckgo_v1_geckgo_proto_msgTypes,
	}.Build()
	File_geckgo_v1_geckgo_proto = out.File
	file_geckgo_v1_geckgo_proto_rawDesc = nil
	file_geckgo_v1_geckgo_proto_goTypes = nil
	file_geckgo_v1_geckgo_proto_depIdxs = nil
}
